{"version":3,"sources":["../../../database/models/index.js"],"names":["fs","require","path","Sequelize","envConfigs","basename","__filename","env","process","NODE_ENV","config","db","sequelize","url","database","username","password","readdirSync","__dirname","filter","file","indexOf","slice","forEach","model","join","name","Object","keys","modelName","associate","authenticate","then","console","log"],"mappings":";;;;;;;AAAA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,SAAS,GAAGF,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAMG,UAAU,GAAGH,OAAO,CAAC,kBAAD,CAA1B;;AAEA,IAAMI,QAAQ,GAAGH,IAAI,CAACG,QAAL,CAAcC,UAAd,CAAjB;AACA,IAAMC,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;AACA,IAAMC,MAAM,GAAGN,UAAU,CAACG,GAAD,CAAzB;AACA,IAAMI,EAAE,GAAG,EAAX;AAEA,IAAIC,SAAJ;;AACA,IAAIF,MAAM,CAACG,GAAX,EAAgB;AACdD,EAAAA,SAAS,GAAG,IAAIT,SAAJ,CAAcO,MAAM,CAACG,GAArB,EAA0BH,MAA1B,CAAZ;AACD,CAFD,MAEO;AACLE,EAAAA,SAAS,GAAG,IAAIT,SAAJ,CACVO,MAAM,CAACI,QADG,EAEVJ,MAAM,CAACK,QAFG,EAGVL,MAAM,CAACM,QAHG,EAIVN,MAJU,CAAZ;AAMD;;AAEDV,EAAE,CAACiB,WAAH,CAAeC,SAAf,EACGC,MADH,CACU,UAACC,IAAD,EAAU;AAChB,SACEA,IAAI,CAACC,OAAL,CAAa,GAAb,MAAsB,CAAtB,IAA2BD,IAAI,KAAKf,QAApC,IAAgDe,IAAI,CAACE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KADrE;AAGD,CALH,EAMGC,OANH,CAMW,UAACH,IAAD,EAAU;AACjB,MAAMI,KAAK,GAAGZ,SAAS,CAAC,QAAD,CAAT,CAAoBV,IAAI,CAACuB,IAAL,CAAUP,SAAV,EAAqBE,IAArB,CAApB,CAAd;AACAT,EAAAA,EAAE,CAACa,KAAK,CAACE,IAAP,CAAF,GAAiBF,KAAjB;AACD,CATH;AAWAG,MAAM,CAACC,IAAP,CAAYjB,EAAZ,EAAgBY,OAAhB,CAAwB,UAACM,SAAD,EAAe;AACrC,MAAIlB,EAAE,CAACkB,SAAD,CAAF,CAAcC,SAAlB,EAA6B;AAC3BnB,IAAAA,EAAE,CAACkB,SAAD,CAAF,CAAcC,SAAd,CAAwBnB,EAAxB;AACD;AACF,CAJD;AAMAA,EAAE,CAACC,SAAH,GAAeA,SAAf;AACAD,EAAE,CAACR,SAAH,GAAeA,SAAf;AAEAQ,EAAE,CAACC,SAAH,CAAamB,YAAb,GAA4BC,IAA5B,CAAiC;AAAA,SAAMC,OAAO,CAACC,GAAR,CAAY,uBAAZ,CAAN;AAAA,CAAjC;eAEevB,E","sourcesContent":["const fs = require(\"fs\");\nconst path = require(\"path\");\nconst Sequelize = require(\"sequelize\");\nconst envConfigs = require(\"../config/config\");\n\nconst basename = path.basename(__filename);\nconst env = process.env.NODE_ENV || \"development\";\nconst config = envConfigs[env];\nconst db = {};\n\nlet sequelize;\nif (config.url) {\n  sequelize = new Sequelize(config.url, config);\n} else {\n  sequelize = new Sequelize(\n    config.database,\n    config.username,\n    config.password,\n    config\n  );\n}\n\nfs.readdirSync(__dirname)\n  .filter((file) => {\n    return (\n      file.indexOf(\".\") !== 0 && file !== basename && file.slice(-3) === \".js\"\n    );\n  })\n  .forEach((file) => {\n    const model = sequelize[\"import\"](path.join(__dirname, file));\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach((modelName) => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\ndb.sequelize.authenticate().then(() => console.log(\"Connected to database\"));\n\nexport default db;\n"],"file":"index.js"}