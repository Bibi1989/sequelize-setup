{"version":3,"sources":["../../controllers/bookcontroller.js"],"names":["getAllBooks","db","Book","findAll","message","getABook","id","findOne","where","Number","addBook","book","create","updateBook","found","update","updatedBook","deleteBook","destroy"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAEO,IAAMA,WAAW;AAAA,2FAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEVC,kBAAGC,IAAH,CAAQC,OAAR,EAFU;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAIhB,YAAMC,OAJU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXJ,WAAW;AAAA;AAAA;AAAA,GAAjB;;;;AAQA,IAAMK,QAAQ;AAAA,4FAAG,kBAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEPL,kBAAGC,IAAH,CAAQK,OAAR,CAAgB;AAC3BC,cAAAA,KAAK,EAAE;AAAEF,gBAAAA,EAAE,EAAEG,MAAM,CAACH,EAAD;AAAZ;AADoB,aAAhB,CAFO;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,8CASb,aAAMF,OATO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARC,QAAQ;AAAA;AAAA;AAAA,GAAd;;;;AAaA,IAAMK,OAAO;AAAA,4FAAG,kBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAENV,kBAAGC,IAAH,CAAQU,MAAR,CAAeD,IAAf,CAFM;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,8CAIZ,aAAMP,OAJM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPM,OAAO;AAAA;AAAA;AAAA,GAAb;;;;AAQA,IAAMG,UAAU;AAAA,4FAAG,kBAAOF,IAAP,EAAaL,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACJL,kBAAGC,IAAH,CAAQK,OAAR,CAAgB;AAAEC,cAAAA,KAAK,EAAE;AAAEF,gBAAAA,EAAE,EAAEG,MAAM,CAACH,EAAD;AAAZ;AAAT,aAAhB,CADI;;AAAA;AAClBQ,YAAAA,KADkB;AAAA;;AAAA,iBAGlBA,KAHkB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAIMb,kBAAGC,IAAH,CAAQa,MAAR,CAAeJ,IAAf,EAAqB;AAC7CH,cAAAA,KAAK,EAAE;AAAEF,gBAAAA,EAAE,EAAEG,MAAM,CAACH,EAAD;AAAZ;AADsC,aAArB,CAJN;;AAAA;AAIdU,YAAAA,WAJc;;AAAA,iBAOhBA,WAPgB;AAAA;AAAA;AAAA;;AAAA,8CAOIL,IAPJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,8CAUf,aAAMP,OAVS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVS,UAAU;AAAA;AAAA;AAAA,GAAhB;;;;AAcA,IAAMI,UAAU;AAAA,4FAAG,kBAAOX,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACJL,kBAAGC,IAAH,CAAQK,OAAR,CAAgB;AAAEC,cAAAA,KAAK,EAAE;AAAEF,gBAAAA,EAAE,EAAEG,MAAM,CAACH,EAAD;AAAZ;AAAT,aAAhB,CADI;;AAAA;AAClBQ,YAAAA,KADkB;AAAA;;AAAA,iBAGlBA,KAHkB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAIPb,kBAAGC,IAAH,CAAQgB,OAAR,CAAgB;AAC3BV,cAAAA,KAAK,EAAE;AAAEF,gBAAAA,EAAE,EAAEG,MAAM,CAACH,EAAD;AAAZ;AADoB,aAAhB,CAJO;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,8CASf,aAAMF,OATS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVa,UAAU;AAAA;AAAA;AAAA,GAAhB","sourcesContent":["import db from \"../database/models/index\";\r\nimport { Op } from \"sequelize\";\r\n\r\nexport const getAllBooks = async () => {\r\n  try {\r\n    return await db.Book.findAll();\r\n  } catch (error) {\r\n    return error.message;\r\n  }\r\n};\r\n\r\nexport const getABook = async (id) => {\r\n  try {\r\n    return await db.Book.findOne({\r\n      where: { id: Number(id) },\r\n    });\r\n    // const oneBook = await db.Book.findAll({\r\n    //   where: { [Op.or]: [{ id: Number(id) }, { price: \"#2000\" }] },\r\n    // });\r\n  } catch (error) {\r\n    return error.message;\r\n  }\r\n};\r\n\r\nexport const addBook = async (book) => {\r\n  try {\r\n    return await db.Book.create(book);\r\n  } catch (error) {\r\n    return error.message;\r\n  }\r\n};\r\n\r\nexport const updateBook = async (book, id) => {\r\n  const found = await db.Book.findOne({ where: { id: Number(id) } });\r\n  try {\r\n    if (found) {\r\n      const updatedBook = await db.Book.update(book, {\r\n        where: { id: Number(id) },\r\n      });\r\n      if (updatedBook) return book;\r\n    }\r\n  } catch (error) {\r\n    return error.message;\r\n  }\r\n};\r\n\r\nexport const deleteBook = async (id) => {\r\n  const found = await db.Book.findOne({ where: { id: Number(id) } });\r\n  try {\r\n    if (found) {\r\n      return await db.Book.destroy({\r\n        where: { id: Number(id) },\r\n      });\r\n    }\r\n  } catch (error) {\r\n    return error.message;\r\n  }\r\n};\r\n"],"file":"bookcontroller.js"}